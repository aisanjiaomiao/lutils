{"version":3,"file":"lutils.min.js","sources":["../../src/json/array2Tree.js","../../src/json/deepClone.js","../../src/json/isEmpty.js","../../src/json/reverse.js","../../src/json/copy.js","../../src/json/arrayEqual.js","../../src/json/isArray.js","../../src/json/optionArr2Obj.js","../../src/json/obj2OptionArr.js","../../src/json/countArray.js","../../src/json/initRangeArray.js","../../src/json/arrFind.js","../../src/json/objFields.js","../../src/json/getTreeNodeIdPath.js","../../src/json/objectProxy.js","../../src/json/storageProxy.js","../../src/json/paginationParse.js","../../src/json/getPageData.js","../../src/json/arrToMatrix.js","../../src/json/index.js","../../src/str/replaceAll.js","../../src/str/digitUppercase.js","../../src/str/rtrim.js","../../src/str/ltrim.js","../../src/str/trim.js","../../src/str/reverse.js","../../src/str/ucfirst.js","../../src/str/beforeFillChar.js","../../src/str/index.js","../../src/file/toBlobURL.js","../../src/file/toDataURL.js","../../src/file/base64UrlToBlob.js","../../src/file/base64UrlToFile.js","../../src/file/downloadByUrl.js","../../src/file/bytesToSize.js","../../src/file/index.js","../../src/date/string2date.js","../../src/date/formatPassTime.js","../../src/date/formatRemainTime.js","../../src/date/isSameDay.js","../../src/date/getTimeStamp.js","../../src/date/toCSTString.js","../../src/date/toCSTDateString.js","../../src/date/index.js","../../src/url/getQueryObject.js","../../src/url/stringfyQueryString.js","../../src/url/getQueryString.js","../../src/url/index.js","../../src/random/index.js","../../src/event/throttle.js","../../src/event/debounce.js","../../src/event/index.js","../../src/num/index.js","../../src/clipboard.js","../../src/cookie/getCookie.js","../../src/cookie/setCookie.js","../../src/cookie/removeCookie.js","../../src/cookie/index.js","../../src/index.js"],"sourcesContent":["/**   \r\n * @desc json格式转树状结构   \r\n * @param   {json}      json数据   \r\n * @param   {String}    id的字符串   \r\n * @param   {String}    父id的字符串   \r\n * @param   {String}    children的字符串   \r\n * @return  {Array}     数组   \r\n */    \r\nfunction array2Tree(a, idStr, pidStr, chindrenStr,addHash){    \r\n    var r = [], hash = {}, id = idStr, pid = pidStr, children = chindrenStr, i = 0, j = 0, len = a.length;    \r\n    for(; i < len; i++){    \r\n        hash[a[i][id]] = a[i];    \r\n    }    \r\n    for(; j < len; j++){    \r\n        var aVal = a[j], hashVP = hash[aVal[pid]];    \r\n        if(hashVP){    \r\n            !hashVP[children] && (hashVP[children] = []);    \r\n            hashVP[children].push(aVal);    \r\n        }else{    \r\n            r.push(aVal);    \r\n        }    \r\n    }    \r\n    return addHash?{hash,tree:r}:r;    \r\n}\r\n\r\nexport default array2Tree;","/**\r\n * @desc 深拷贝，支持常见类型\r\n * @param {Any} values\r\n */\r\nfunction deepClone(values) {\r\n    var copy;\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == values || \"object\" != typeof values) return values;\r\n    // Handle Date\r\n    if (values instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(values.getTime());\r\n        return copy;\r\n    }\r\n    // Handle Array\r\n    if (values instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = values.length; i < len; i++) {\r\n            copy[i] = deepClone(values[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    // Handle Object\r\n    if (values instanceof Object) {\r\n        copy = {};\r\n        for (var attr in values) {\r\n            if (values.hasOwnProperty(attr)) copy[attr] = deepClone(values[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n    throw new Error(\"Unable to copy values! Its type isn't supported.\");\r\n}\r\n\r\nexport default   deepClone;","/**\r\n * \r\n * @desc   判断`obj`是否为空\r\n * @param  {Object} obj\r\n * @return {Boolean}\r\n */\r\nfunction isEmpty(obj) {\r\n    if (typeof obj == 'object') {\r\n        if (Array.isArray(obj))return obj.length<=0;\r\n        else return !Object.keys(obj).length;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default   isEmpty","/**   \r\n * @desc json数据翻转 key value翻转或 数组翻转  \r\n * @param   {json}      json数据       \r\n * @return  {Object}       \r\n */\r\nfunction reverse(obj) {\r\n    if (typeof obj != 'object') return obj\r\n    if (Array.isArray(obj))return obj.reverse();\r\n    return  Object.fromEntries(Object.entries(obj).map(([a,b])=>[b,a]))\r\n    //  var o = new Object();\r\n    //  for (var k in obj) {\r\n    //      o[obj[k]] = k;\r\n    //  }\r\n    //  return o;\r\n}\r\n\r\nexport default   reverse","/**\r\n * @desc 浅拷贝，支持常见类型\r\n * @param {Any} values\r\n * @return {json}\r\n */\r\nfunction copy(o) {\r\n    return JSON.parse(JSON.stringify({ d: o })).d;\r\n}\r\n\r\nexport default   copy;","/**\r\n * \r\n * @desc 判断两个数组是否相等\r\n * @param {Array} arr1 \r\n * @param {Array} arr2 \r\n * @return {Boolean}\r\n */\r\nfunction arrayEqual(arr1, arr2) {\r\n    if (arr1 === arr2) return true;\r\n    if (arr1.length != arr2.length) return false;\r\n    for (var i = 0; i < arr1.length; ++i) {\r\n        if (arr1[i] !== arr2[i]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default   arrayEqual;","/**\r\n * @desc 判断是否是数组\r\n * @param {Any} values\r\n * @return {Boolean}\r\n */\r\nfunction isArray(a) {\r\n    if (Array.isArray) return Array.isArray(a);\r\n    return Object.prototype.toString.call(a) == '[object Array]';\r\n}\r\n\r\nexport default   isArray;","/**\r\n * @desc Select option数组 转 kv json\r\n * @param {Array} l 对象数组[{value: '选项1',label: '黄金糕'}, {value: '选项2',label: '双皮奶'},...]\r\n * @param {String|Number} t key值 例如:\"label\"\r\n * @param {String|Number} v value值 例如:\"value\"\r\n * @return {Object}  {'黄金糕':'选项1'}\r\n */\r\nfunction optionArr2Obj(l, t, v) {\r\n    var c = {};\r\n    for (var i of l) {\r\n        if (!c[i[t]]) c[i[t]] = i[v];\r\n    }\r\n    return c;\r\n};\r\n\r\nexport default   optionArr2Obj;","/**\r\n * @desc kv json  转 Select option 数组\r\n * @param {Object} o  \r\n * @param {String|Number} t  \r\n * @param {String|Number} v  \r\n * @return {Object} \r\n */\r\nfunction obj2OptionArr(o, t, v) {\r\n    return Object.entries(o).map(([k,i])=>({[t||\"label\"]:k,[v||\"value\"]:i}))\r\n    /*var l = [];\r\n    for (var i in o) {\r\n        var c={}\r\n        c[t]=i;\r\n        c[v]=o[i];\r\n        l.push(c);\r\n    }\r\n    return l;*/\r\n};\r\n\r\nexport default   obj2OptionArr;","/** \r\n * @desc 计算数组项出现次数\r\n * @param {Array} \r\n * @param {String|Number|Boolean}\r\n * @return {Number}\r\n */\r\nfunction countArray(arr,value){\r\n    if(Array.isArray(arr)){\r\n        return (value?arr.reduce((a, v) => v === value ? a + 1 : a + 0, 0):arr.length);\r\n    }return 0;\r\n}\r\nexport default    countArray;\r\n","/**\r\n * @desc 生成返回数组\r\n * @param {Number} start \r\n * @param {Number} end\r\n * @return {Array} \r\n */\r\nfunction initRangeArray(start, end) {\r\n    if (typeof end != \"number\") [start,end]=[0,start];\r\n    return Array.apply(null, Array(end - start)).map((v, i) => i + start);\r\n}\r\nexport default   initRangeArray;\r\n","/**\r\n * @desc  数组寻找\r\n * @param {Array} s 源数组 \r\n * @param {Object} kv Key  Value\r\n * @param {Array} f fields新对象的fields\r\n * @param {Boolean} m Many 返回多项\r\n * @return {Object|Array} \r\n */\r\nfunction arrFind(s, kv, f, m) {\r\n    let ks, k, v, oneK = true;\r\n    let isFn = typeof kv === \"function\";//如果是函数\r\n    if (!isFn) {\r\n        ks = Object.keys(kv);\r\n        oneK = ks.length === 1;\r\n        k = (oneK ? ks[0] : null);\r\n        v = oneK ? kv[k] : null;\r\n    }\r\n    let o = s[m ? \"filter\" : \"find\"](isFn ? kv : (_ => {\r\n        if (oneK) {\r\n            return _[k] === v;\r\n        } else {\r\n            for (k in kv) {\r\n                if (_[k] !== kv[k]) return false;\r\n            }\r\n            return true;\r\n        }\r\n    }));\r\n    if (m) {\r\n        if (o.length > 0 && Array.isArray(f)) {\r\n            return o.map(v => {\r\n                return lutils.json.objFields(v, f);\r\n            });\r\n        }\r\n    } else {\r\n        if (o && Array.isArray(f)) {\r\n            return this.objFields(o, f);\r\n        }\r\n    }\r\n    return o;\r\n}\r\n\r\nexport default   arrFind;","/**\r\n* @desc  过滤对象Key\r\n* @param {Object} o 源对象\r\n* @param {Array} f Keys  \r\n* @return {Object} \r\n*/\r\nfunction objFields(o, f) {\r\n    let n = {};\r\n    for (let k of f) n[k] = o[k];\r\n    return n;\r\n}\r\n\r\nexport default   objFields;","\r\n/**   \r\n * @desc  获取树结构的节点id路径数组（常用于文件路径路由生成）\r\n * @param   {Array}     treeArr   \r\n * @param   {String|Number}    id id 值\r\n * @param   {String}    idStr id key字符串\r\n * @param   {String}    chindrenStr  chindren key字符串 \r\n * @return  {Array}     数组   \r\n * \r\n getTreeNodeIdPath([{\r\n    id: 0,\r\n    name: \"root\",\r\n    chindren: [{\r\n        id: 1,\r\n        name: \"home\",\r\n        chindren: [{\r\n            id: 2,\r\n            name: \"src\"\r\n        }]\r\n    }, {\r\n        id: 3,\r\n        name: \"nignx\",\r\n        chindren: [{\r\n            id: 4,\r\n            name: \"nginx.exe\"\r\n        }]\r\n    }]\r\n}], 2)\r\n */\r\nimport copy from './copy';\r\n\r\nfunction getTreeNodeIdPath(treeArr, id, idStr, chindrenStr) {\r\n    if (idStr == undefined) idStr = \"id\";\r\n    if (chindrenStr == undefined) chindrenStr = \"chindren\";\r\n    treeArr = copy(treeArr);\r\n    let pathId = [];\r\n    let _fn = function (nodes, pid) {\r\n        for (let n of nodes) {\r\n            n.$pid = pid ? pid.concat(n[idStr]) : [n[idStr]];\r\n            if (n[idStr] == id) {\r\n                return pathId = n.$pid;\r\n            }\r\n            if (n[chindrenStr]) {\r\n                _fn(n[chindrenStr], n.$pid);\r\n            }\r\n        }\r\n    }\r\n    _fn(treeArr, pathId);\r\n    return pathId;\r\n}\r\n\r\nexport default getTreeNodeIdPath;\r\n","/**\r\n * @desc 生成对象代理\r\n * @param {Object} conf.initValue  初始化值\r\n * @param {Function} conf.update 更新事件\r\n * @param {Object} conf.watch 值变动监察\r\n * @return {Proxy}\r\n */\r\nfunction objectProxy(conf) {\r\n  let { watch, update, initValue } = conf;\r\n  let data = typeof initValue == \"object\" ? initValue : typeof initValue == \"function\" ? initValue() : {};\r\n  const change = (e) => {\r\n    let { event, oldValue, target, key, value, receiver, data } = e;\r\n    if (!watch || typeof watch != \"object\") return;\r\n    Object.keys(watch).forEach((k) => {\r\n      if (eval(`data.${k}`) == target[key]) watch[k].bind(proxy)(value, oldValue, e);\r\n    });\r\n  };\r\n  const proxify = (event) => {\r\n    return isPrimitive(event)\r\n      ? event\r\n      : new Proxy(event, {\r\n          get: getProp,\r\n          set(target, key, value, receiver) {\r\n            change({ event, oldValue: target[key], target, key, value, receiver, data, proxy });\r\n            target[key] = value;\r\n            if (update) update.bind(proxy)();\r\n          },\r\n        });\r\n  };\r\n  const isPrimitive = (v) => v == null || (typeof v !== \"function\" && typeof v !== \"object\");\r\n  const getProp = (target, property) => (property in target ? proxify(target[property]) : proxify({}));\r\n  const proxy = proxify(data);\r\n  return proxy;\r\n}\r\nexport default objectProxy;\r\n","/**\r\n * @desc 生成storage对象代理\r\n * @param {Object} conf.name storage键名 默认 \"lifeData\"\r\n * @param {Object} conf.storage storage存储类型 默认 localStorage\r\n * @param {Object} conf.initValue  初始化值\r\n * @param {Function} conf.update 更新事件\r\n * @param {Object} conf.watch 值变动监察\r\n * @return {Proxy}\r\n */\r\n\r\nimport objectProxy from \"./objectProxy\";\r\n\r\nfunction storageProxy(conf) {\r\n  let { name, watch, update, initValue, storage } = conf;\r\n  name = name || \"lifeData\";\r\n  storage = storage || localStorage;\r\n  return objectProxy({\r\n    watch,\r\n    initValue() {\r\n      let data = typeof initValue == \"object\" ? initValue : typeof initValue == \"function\" ? initValue() : {};\r\n      if (storage.getItem(name)) {\r\n        try {\r\n          data = JSON.parse(storage.getItem(name));\r\n        } catch (error) {\r\n          storage.setItem(name, JSON.stringify(data));\r\n        }\r\n      } else {\r\n        storage.setItem(name, JSON.stringify(data));\r\n      }\r\n      return data;\r\n    },\r\n    update() {\r\n      storage.setItem(name, JSON.stringify(this));\r\n      if (update) update();\r\n    },\r\n  });\r\n}\r\n\r\nexport default storageProxy;\r\n","/**\r\n * @desc 生成分页信息\r\n * @param {Number} conf.pageNum 当前页码\r\n * @param {Number} conf.totalCount 数据总数\r\n * @param {Number} conf.dataCount  数据总数\r\n * @param {Number} conf.pageSize 分页大小\r\n * @param {Number} conf.pageListCount 分页器数组长度\r\n * @return {Object}\r\n * \r\n    console.log(-1, JSON.stringify(paginationParse({ pageNum: -1, totalCount: 0, pageListCount: 5, pageSize: 20 })));\r\n    console.log(1, JSON.stringify(paginationParse({ pageNum: 1, totalCount: 0, pageListCount: 5, pageSize: 20 })));\r\n    console.log(2, JSON.stringify(paginationParse({ pageNum: 2, totalCount: 0, pageListCount: 5, pageSize: 20 })));\r\n    for (let i = -1; i < 14; i++) {\r\n        console.log(i, JSON.stringify(paginationParse({ pageNum: i, totalCount: 201, pageListCount: 5, pageSize: 20 })));\r\n    }\r\n */\r\nfunction paginationParse(conf) {\r\n  let { pageNum, totalCount, dataCount, pageSize, pageListCount } = conf;\r\n  let page = {\r\n    totalCount: totalCount || dataCount,\r\n    cursor: parseInt(pageNum || 1), //当前页面\r\n    size: parseInt(pageSize || 20), //分页大小\r\n    total: parseInt(totalCount || 0), //总数据量\r\n    list: [], //分页列表\r\n    listCount: parseInt(pageListCount || 5), //分页显示链接数量\r\n  };\r\n  page.cursor = page.cursor > 0 ? page.cursor : 1;\r\n  page.max = Math.ceil(page.totalCount / page.size); // 计算最大分页数\r\n  let len = Math.floor(page.listCount / 2); //左右边\r\n  let offset = 0; // 计算偏移\r\n  if (page.cursor > page.max) {\r\n    // 游标大于 最大分页数\r\n    for (let i = 1; i <= page.max; i++) page.list.push(i);\r\n  } else {\r\n    for (let i = page.cursor - len; i <= page.cursor + len; i++) {\r\n      if (i < 1) offset++; // 索引越界 加 偏移\r\n      if (i > page.max) offset--; //索引越界 减 偏移\r\n      page.list.push(i);\r\n    }\r\n    page.list = page.list.map((v) => v + offset).filter((v) => v <= page.max && v > 0);\r\n  }\r\n  if (page.list.length > page.listCount) page.list = page.cursor > page.max ? page.list.slice(page.list.length - page.listCount, page.list.length) : page.list.slice(0, page.listCount);\r\n  if (page.cursor - 1 > 0) page.prev = page.cursor - 1;\r\n  if (page.prev > page.max) page.prev = page.list.length ? page.list[page.list.length - 1] : null;\r\n  if (page.cursor + 1 <= page.max) page.next = page.cursor + 1;\r\n  if (page.next < 1) page.next = 1;\r\n  return page;\r\n}\r\nexport default paginationParse;\r\n","/**\r\n * @desc 获取数组分页数据\r\n * @param {Array} list \r\n * @param {Number} cursor\r\n * @param {Number} size\r\n * @return Array\r\n */\r\nfunction getPageData(list, cursor, size) {\r\n  if (!cursor || cursor < 1) cursor = 1;\r\n  if (!size) size = 20;\r\n  return list.slice((cursor - 1) * size, cursor * size);\r\n}\r\n\r\nexport default getPageData;\r\n","/**\r\n * @desc 一维数组转二维矩阵数组\r\n * @param   {Array}     arr 一维数组\r\n * @param   {width}     width 合并长度 \r\n * @return  {Array}     二维矩阵数组\r\n */\r\nfunction toMatrix(arr, width) {\r\n  return arr.reduce((rows, key, index) => (index % width == 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) && rows, []);\r\n}\r\n\r\nexport default toMatrix;\r\n","import array2Tree from './array2Tree';\r\nimport deepClone from './deepClone';\r\nimport isEmpty from './isEmpty';\r\nimport reverse from './reverse';\r\nimport copy from \"./copy\";\r\nimport arrayEqual from \"./arrayEqual\";\r\nimport isArray from \"./isArray\";\r\nimport optionArr2Obj from \"./optionArr2Obj\";\r\nimport obj2OptionArr from \"./obj2OptionArr\";\r\nimport countArray from \"./countArray\";\r\nimport initRangeArray from \"./initRangeArray\";\r\nimport arrFind from \"./arrFind\";\r\nimport objFields from \"./objFields\";\r\nimport getTreeNodeIdPath from \"./getTreeNodeIdPath\";\r\nimport objectProxy from \"./objectProxy\";\r\nimport storageProxy from \"./storageProxy\";\r\nimport paginationParse from \"./paginationParse\";\r\nimport getPageData from \"./getPageData\";\r\nimport arrToMatrix from \"./arrToMatrix\";\r\n\r\nexport default {\r\n    arrToMatrix,  array2Tree, deepClone, isEmpty, copy, arrayEqual, isArray, reverse, optionArr2Obj, obj2OptionArr, countArray, initRangeArray, arrFind, objFields, getTreeNodeIdPath,storageProxy,objectProxy,paginationParse,getPageData\r\n};\r\n","/**\r\n * \r\n * @desc   全部替换\r\n * @param  {String} 原始字符串\r\n * @param  {String} 搜索字符串\r\n * @param  {String} 替换字符串\r\n * @return {String}\r\n */\r\nfunction replaceAll(s0,s1,s2){\r\n    return s0.replace(new RegExp(s1, \"gm\"), s2);\r\n}\r\n\r\nexport default  replaceAll ;","/**\r\n * \r\n * @desc   现金额转大写\r\n * @param  {Number} n \r\n * @return {String}\r\n */\r\nfunction digitUppercase(n) {\r\n    var fraction = ['角', '分'];\r\n    var digit = [\r\n        '零', '壹', '贰', '叁', '肆',\r\n        '伍', '陆', '柒', '捌', '玖'\r\n    ];\r\n    var unit = [\r\n        ['元', '万', '亿'],\r\n        ['', '拾', '佰', '仟']\r\n    ];\r\n    var head = n < 0 ? '欠' : '';\r\n    n = Math.abs(n);\r\n    var s = '';\r\n    for (var i = 0; i < fraction.length; i++) {\r\n        s += (digit[Math.floor(n * 10 * Math.pow(10, i)) % 10] + fraction[i]).replace(/零./, '');\r\n    }\r\n    s = s || '整';\r\n    n = Math.floor(n);\r\n    for (var i = 0; i < unit[0].length && n > 0; i++) {\r\n        var p = '';\r\n        for (var j = 0; j < unit[1].length && n > 0; j++) {\r\n            p = digit[n % 10] + unit[1][j] + p;\r\n            n = Math.floor(n / 10);\r\n        }\r\n        s = p.replace(/(零.)*零$/, '').replace(/^$/, '零') + unit[0][i] + s;\r\n    }\r\n    return head + s.replace(/(零.)*零元/, '元')\r\n        .replace(/(零.)+/g, '零')\r\n        .replace(/^整$/, '零元整');\r\n};\r\n\r\nexport default   digitUppercase","\r\n/**\r\n* @desc 删除右边的空格\r\n* @param {String}\r\n* @return {String}\r\n*/\r\nfunction rtrim(s) {\r\n    return s.replace(/(\\s*$)/g, '');\r\n}\r\nexport default   rtrim;","/**\r\n* @desc 删除左边的空格\r\n* @param {String}\r\n* @return {String}\r\n*/\r\nfunction ltrim(s) {\r\n    return s.replace(/(^\\s*)/g, '');\r\n}\r\nexport default   ltrim;\r\n","/**\r\n* \r\n* @desc 删除左右两端的空格\r\n* @param {String}\r\n* @return {String}\r\n*/\r\nfunction trim(s) {\r\n    return s.replace(/(^\\s*)|(\\s*$)/g, '');\r\n}\r\nexport default   trim;\r\n\r\n\r\n","/**   \r\n * @desc 字符串数据翻转\r\n * @param   {String}            \r\n * @return  {Object}     数组   \r\n */\r\nfunction reverse(s) {\r\n    if (s) return s.split(\"\").reverse().join('');\r\n    return '';\r\n}\r\n\r\nexport default   reverse","/**\r\n* \r\n* @desc 英文首字母大写\r\n* @param {String}\r\n* @return {String}\r\n*/\r\nfunction ucfirst(str) {\r\n    var str = str.toLowerCase();\r\n    str = str.replace(/\\b\\w+\\b/g, function (word) {\r\n        return word.substring(0, 1).toUpperCase() + word.substring(1);\r\n    });\r\n    return str;\r\n};\r\nexport default   ucfirst;\r\n\r\n\r\n","\r\n/** \r\n ** @desc 在字符串之前根据长度填充自定义字符\r\n ** @param  {Number} 数字\r\n ** @param {Number} 长度\r\n ** @param {String} 填充字符\r\n ** @return {String}  \r\n **/\r\n function beforeFillChar(str,len,char){ \r\n    if(str.length>len||!len)return str;\r\n    return Array(len-str.length).fill(char||' ').join(\"\")+str;\r\n}\r\nexport default beforeFillChar;","import replaceAll  from './replaceAll';\r\nimport digitUppercase  from \"./digitUppercase\";\r\nimport rtrim  from \"./rtrim\";\r\nimport ltrim  from \"./ltrim\";\r\nimport trim  from \"./trim\";\r\nimport reverse  from \"./reverse\";\r\nimport ucfirst from \"./ucfirst\";\r\nimport beforeFillChar from \"./beforeFillChar\";\r\nexport default   {\r\n    replaceAll, digitUppercase, rtrim, ltrim, trim, reverse,ucfirst,beforeFillChar\r\n};\r\n","/**\r\n * \r\n * @desc   文件转BlobURL\r\n * @param  {File} 文件 \r\n * @callback {String}  DataURL\r\n */ \r\nfunction toBlobURL(f){\r\n    var url=URL.createObjectURL(f);\r\n    setTimeout(function () {\r\n        URL.revokeObjectURL(f); \r\n    }, 10); \r\n    return url;\r\n}\r\nexport default   toBlobURL;","/**\r\n * \r\n * @desc   文件转DataURL\r\n * @param  {File} 文件\r\n * @param  {Function} 回调函数\r\n * @param  {String} 是否Base64\r\n * @callback {String}  DataURL\r\n */\r\nfunction toDataURL(file, c, isBase) {\r\n    var reader = new FileReader();\r\n    reader.onload = function () {\r\n        if (typeof c == \"function\") c(isBase ? this.result.split(',')[1] : this.result);\r\n    }\r\n    reader.readAsDataURL(file);\r\n}\r\n\r\nexport default   toDataURL;","/**  \r\n * 将以base64的图片url数据转换为Blob  \r\n * @param {String} urlData   用url方式表示的base64图片数据 \r\n * @param {Object} type 文件类型\r\n * @param {Boolean} isAB 是否返回ArrayBuffer\r\n * @return {Blob | ArrayBuffer} \r\n */\r\nfunction base64UrlToBlob(urlData, type, isAB) {\r\n    var bytes = window.atob(urlData.split(',')[1]);        //去掉url的头，并转换为byte  \r\n    //处理异常,将ascii码小于0的转换为大于0  \r\n    var ab = new ArrayBuffer(bytes.length);\r\n    var ia = new Uint8Array(ab);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        ia[i] = bytes.charCodeAt(i);\r\n    }\r\n    return isAB ? ab : (new Blob([ab], type || { type: 'application/octet-stream' }));\r\n}\r\n\r\nexport default   base64UrlToBlob;","/**  \r\n * 将以base64的图片url数据转换为Blob  \r\n * @param {String} urlData   用url方式表示的base64图片数据 \r\n * @param {String} name 文件名\r\n * @param {String} type 文件类型 \r\n * @return {File} \r\n */\r\nfunction base64UrlToFile(urlData, name, type) {\r\n    var bytes = window.atob(urlData.split(',')[1]);\r\n    type = type || i.img.split(\";\")[0].split(\":\")[1];\r\n    var ab = new ArrayBuffer(bytes.length);\r\n    var ia = new Uint8Array(ab);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        ia[i] = bytes.charCodeAt(i);\r\n    }\r\n    return (new File([ab], name, { 'type': type}));\r\n}\r\n\r\n\r\nexport default   base64UrlToFile;","/**\r\n ** @desc 通过Url下载文件\r\n ** @param  {String}  URL\r\n ** @param {String} 文件名\r\n **/\r\nfunction downloadByUrl(l, n) {\r\n    if (typeof l != \"string\" || l.length <= 0) return;\r\n    let f = document.createElement(\"a\");\r\n    f.id = \"download-\" + Date.parse(new Date());\r\n    f.href = l;\r\n    f.download = n || \"下载\";\r\n    f.style = \"opacity: 0;height: 1px;width: 1px;overflow: hidden;position:fixed;top: -1;left: -1;z-index: -1;\"\r\n    document.body.appendChild(f);\r\n    document.querySelector('#' + f.id).click();\r\n    document.body.removeChild(document.getElementById(f.id));\r\n}\r\nexport default   downloadByUrl;\r\n","/**\r\n * 计算文件大小\r\n * @param {Number} bytes 文件二进制大小\r\n * @param {Array}  sizes 文件二进制大小单位\r\n * @return {String}\r\n */\r\nfunction bytesToSize(bytes, sizes) {\r\n  if (bytes === 0) return \"0 B\";\r\n  let k = 1024;\r\n  sizes = sizes || [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n  let i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return (bytes / Math.pow(k, i)).toPrecision(3) + \" \" + sizes[i]; // 后面保留一位小数，如1.0GB                                                                                                                  //return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\nexport default bytesToSize;\r\n","import toBlobURL  from './toBlobURL';\r\nimport toDataURL  from './toDataURL';\r\nimport base64UrlToBlob from \"./base64UrlToBlob\"; \r\nimport base64UrlToFile from \"./base64UrlToFile\"; \r\nimport downloadByUrl from \"./downloadByUrl\";\r\nimport bytesToSize from './bytesToSize';\r\nexport default   {\r\n    toBlobURL, toDataURL,base64UrlToBlob,downloadByUrl,bytesToSize,base64UrlToFile\r\n};\r\n","/**\r\n * @desc   字符串转日期时间\r\n * @param  {String}  \r\n * @param  {String} format 日期格式\r\n * @return {Boolean}\r\n */\r\nfunction string2date(s, f) {\r\n    return new Date(Date.parse(s.replace(f || /-/g, \"/\")));\r\n}\r\nexport default   string2date\r\n","/**\r\n * @desc   格式化${startTime}距现在的已过时间\r\n * @param  {Date} startTime \r\n * @return {String}\r\n */\r\nfunction formatPassTime(startTime) {\r\n    var currentTime = Date.parse(new Date()),\r\n        time = currentTime - startTime,\r\n        day = parseInt(time / (1000 * 60 * 60 * 24)),\r\n        hour = parseInt(time / (1000 * 60 * 60)),\r\n        min = parseInt(time / (1000 * 60)),\r\n        month = parseInt(day / 30),\r\n        year = parseInt(month / 12);\r\n    if (year) return year + \"年前\"\r\n    if (month) return month + \"个月前\"\r\n    if (day) return day + \"天前\"\r\n    if (hour) return hour + \"小时前\"\r\n    if (min) return min + \"分钟前\"\r\n    else return '刚刚'\r\n}\r\n\r\nexport default   formatPassTime","/**\r\n * \r\n * @desc   格式化现在距${endTime}的剩余时间\r\n * @param  {Date} endTime  \r\n * @return {String}\r\n */\r\nfunction formatRemainTime(endTime) {\r\n    var startDate = new Date(); //开始时间\r\n    var endDate = new Date(endTime); //结束时间\r\n    var t = endDate.getTime() - startDate.getTime(); //时间差\r\n    var d = 0,\r\n        h = 0,\r\n        m = 0,\r\n        s = 0;\r\n    if (t >= 0) {\r\n        d = Math.floor(t / 1000 / 3600 / 24);\r\n        h = Math.floor(t / 1000 / 60 / 60 % 24);\r\n        m = Math.floor(t / 1000 / 60 % 60);\r\n        s = Math.floor(t / 1000 % 60);\r\n    }\r\n    return d + \"天 \" + h + \"小时 \" + m + \"分钟 \" + s + \"秒\";\r\n}\r\n\r\nexport default   formatRemainTime","/**\r\n * @desc   判断是否为同一天\r\n * @param  {Date} date1 \r\n * @param  {Date} date2 可选／默认值：当天\r\n * @return {Boolean}\r\n */\r\nfunction isSameDay(date1, date2) {\r\n    if (!date2) {\r\n        date2 = new Date();\r\n    }\r\n    var date1_year = date1.getFullYear(),\r\n        date1_month = date1.getMonth() + 1,\r\n        date1_date = date1.getDate();\r\n    var date2_year = date2.getFullYear(),\r\n        date2_month = date2.getMonth() + 1,\r\n        date2_date = date2.getDate()\r\n\r\n    return date1_date === date2_date && date1_month === date2_month && date1_year === date2_year;\r\n\r\n}\r\n\r\nexport default   isSameDay","/**\r\n * 返回一个时间戳,\r\n * @param {Boolean} n 是否以毫秒为单位,精确到千分之一毫秒\r\n * @return {Number}\r\n*/\r\nfunction getTimeStamp(n) {\r\n    return n ? performance.now() : (+new Date());\r\n}\r\n\r\nexport default getTimeStamp","\r\n/**\r\n * @desc   通过时间戳获取中国日期+时间\r\n * @param  {Number} timestamp 时间戳\r\n * @return {Boolean}\r\n */\r\nfunction toCSTString(timestamp) {\r\n    return new Date((timestamp || (+new Date)) + 8 * 3600 * 1000).toISOString();\r\n}\r\nexport default toCSTString\r\n\r\n","import toCSTString from \"./toCSTString\";\r\n/**\r\n * @desc   通过时间戳获取中国日期\r\n * @param  {Number} timestamp 时间戳\r\n * @return {Boolean}\r\n */\r\nfunction toCSTDateString(timestamp) {\r\n    return toCSTString().split('T')[0];\r\n}\r\nexport default toCSTDateString\r\n","import string2date  from './string2date';\r\nimport formatPassTime  from './formatPassTime';\r\nimport formatRemainTime  from './formatRemainTime';\r\nimport isSameDay  from './isSameDay';\r\nimport getTimeStamp from \"./getTimeStamp\";\r\nimport toCSTString from \"./toCSTString\";\r\nimport toCSTDateString from \"./toCSTDateString\";\r\n\r\nexport default   {\r\n    string2date, formatPassTime, formatRemainTime,isSameDay,getTimeStamp,toCSTString,toCSTDateString\r\n};","/**\r\n * \r\n * @desc   url参数转对象\r\n * @param  {String} url  default: window.location.href\r\n * @return {Object} \r\n */\r\nfunction getQueryObject(url) {\r\n    url = url ? url:window.location.search ;\r\n    let search = url[0] === '?' ? url : url.substring(url.lastIndexOf('?')); \r\n    let q = {};\r\n    search.replace(/([^?&=]+)=([^&]+)/g, (_, k, v) => q[k] = decodeURIComponent(v));\r\n    return q; \r\n}\r\nexport default getQueryObject;","/**\r\n * \r\n * @desc   对象序列化\r\n * @param  {Object} obj \r\n * @return {String}\r\n */\r\nfunction stringfyQueryString(obj) {\r\n    if (!obj) return '';\r\n    var pairs = [];\r\n    for (var key in obj) {\r\n        var value = obj[key];\r\n        if (value instanceof Array) {\r\n            for (var i = 0; i < value.length; ++i) {\r\n                pairs.push(encodeURIComponent(key + '[' + i + ']') + '=' + encodeURIComponent(value[i]));\r\n            }\r\n            continue;\r\n        }\r\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\r\n    }\r\n    return pairs.join('&');\r\n}\r\n\r\nexport default   stringfyQueryString","/**\r\n * \r\n * @desc   通过name获取url参数\r\n * @param  {String} url  default: window.location.href\r\n * @return {Object} \r\n */\r\nfunction getQueryString(name) {//获取url参数值方法2\r\n    var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\r\n    var r = window.location.search.substr(1).match(reg);Object\r\n    if (r != null) {\r\n        return decodeURI(r[2]);\r\n    }\r\n    return null;\r\n}\r\nexport default   getQueryString","\r\nimport getQueryObject  from './getQueryObject';\r\nimport stringfyQueryString  from \"./stringfyQueryString\";\r\nimport getQueryString  from \"./getQueryString\";\r\n\r\nexport default   {\r\n    getQueryObject, stringfyQueryString, getQueryString\r\n};","/**\r\n * \r\n * @desc 随机 True/ False\r\n * @return {Boolean} \r\n */\r\nfunction randomBoolean () {\r\n    return Math.random() >=0.5;\r\n}\r\n/**\r\n * \r\n * @desc 随机生成颜色\r\n * @return {String} \r\n */\r\nfunction randomColor() {\r\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).slice(-6);\r\n}\r\n/**\r\n * \r\n * @desc 生成指定范围[min, max]的随机数\r\n * @param  {Number} min \r\n * @param  {Number} max \r\n * @return {Number} \r\n */\r\nfunction randomNum(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n/**\r\n * \r\n * @desc 生成随机字符串([A~Z],[a~z],[0~9])\r\n * @param  {Number} min \r\n * @param  {Number} max \r\n * @return {Number} \r\n */\r\n\r\nfunction randomChars(len) {\r\n    var s = \"\", t;\r\n    var ranNum = (l) => {\r\n        return Math.floor(Math.random() * (l[1] - l[0])) + l[0];\r\n    };\r\n    for (; len > 0; len--) {\r\n        t = ranNum([[65, 91], [97, 123], [0, 10]][ranNum([0, 3])]);\r\n        s = s + (t > 10 ? String.fromCharCode(t) : t.toString());\r\n    }\r\n    return s;\r\n};\r\n\r\n/**\r\n * @desc 打乱数组内部元素顺序\r\n * @param {Array} arr \r\n */\r\nfunction randomSort(arr){\r\n    return arr.sort(() => Math.random() - 0.5);\r\n}\r\n\r\n/**\r\n * @desc 生成UUID\r\n * @return {String}\r\n */\r\nfunction UUID(){\r\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\r\n}\r\n\r\n/**\r\n * @desc 生成长度为11的随机字母数字字符串\r\n * @return {String}\r\n */\r\nfunction id11(){\r\n\treturn Math.random().toString(36).substring(2);\r\n}\r\n\r\nexport default   {\r\n    randomColor, randomNum, randomChars,randomSort,UUID,id11,randomBoolean\r\n};","/**\r\n * @desc   函数节流。\r\n * 适用于限制`resize`和`scroll`等函数的调用频率\r\n *\r\n * @param  {Number}    delay          0 或者更大的毫秒数。 对于事件回调，大约100或250毫秒（或更高）的延迟是最有用的。\r\n * @param  {Boolean}   noTrailing     可选，默认为false。\r\n *                                    如果noTrailing为true，当节流函数被调用，每过`delay`毫秒`callback`也将执行一次。\r\n *                                    如果noTrailing为false或者未传入，`callback`将在最后一次调用节流函数后再执行一次.\r\n *                                    （延迟`delay`毫秒之后，节流函数没有被调用,内部计数器会复位）\r\n * @param  {Function}  callback       延迟毫秒后执行的函数。`this`上下文和所有参数都是按原样传递的，\r\n *                                    执行去节流功能时，调用`callback`。\r\n * @param  {Boolean}   debounceMode   如果`debounceMode`为true，`clear`在`delay`ms后执行。\r\n *                                    如果debounceMode是false，`callback`在`delay` ms之后执行。\r\n *\r\n * @return {Function}  新的节流函数\r\n */\r\nexport default   function throttle(delay, noTrailing, callback, debounceMode) {\r\n\r\n    // After wrapper has stopped being called, this timeout ensures that\r\n    // `callback` is executed at the proper times in `throttle` and `end`\r\n    // debounce modes.\r\n    var timeoutID;\r\n\r\n    // Keep track of the last time `callback` was executed.\r\n    var lastExec = 0;\r\n\r\n    // `noTrailing` defaults to falsy.\r\n    if (typeof noTrailing !== 'boolean') {\r\n        debounceMode = callback;\r\n        callback = noTrailing;\r\n        noTrailing = undefined;\r\n    }\r\n\r\n    // The `wrapper` function encapsulates all of the throttling / debouncing\r\n    // functionality and when executed will limit the rate at which `callback`\r\n    // is executed.\r\n    function wrapper() {\r\n\r\n        var self = this;\r\n        var elapsed = Number(new Date()) - lastExec;\r\n        var args = arguments;\r\n\r\n        // Execute `callback` and update the `lastExec` timestamp.\r\n        function exec() {\r\n            lastExec = Number(new Date());\r\n            callback.apply(self, args);\r\n        }\r\n\r\n        // If `debounceMode` is true (at begin) this is used to clear the flag\r\n        // to allow future `callback` executions.\r\n        function clear() {\r\n            timeoutID = undefined;\r\n        }\r\n\r\n        if (debounceMode && !timeoutID) {\r\n            // Since `wrapper` is being called for the first time and\r\n            // `debounceMode` is true (at begin), execute `callback`.\r\n            exec();\r\n        }\r\n\r\n        // Clear any existing timeout.\r\n        if (timeoutID) {\r\n            clearTimeout(timeoutID);\r\n        }\r\n\r\n        if (debounceMode === undefined && elapsed > delay) {\r\n            // In throttle mode, if `delay` time has been exceeded, execute\r\n            // `callback`.\r\n            exec();\r\n\r\n        } else if (noTrailing !== true) {\r\n            // In trailing throttle mode, since `delay` time has not been\r\n            // exceeded, schedule `callback` to execute `delay` ms after most\r\n            // recent execution.\r\n            //\r\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\r\n            // after `delay` ms.\r\n            //\r\n            // If `debounceMode` is false (at end), schedule `callback` to\r\n            // execute after `delay` ms.\r\n            timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\r\n        }\r\n\r\n    }\r\n\r\n    // Return the wrapper function.\r\n    return wrapper;\r\n\r\n};","import throttle  from './throttle';\r\n\r\n/**\r\n * @desc 函数防抖 \r\n * 与throttle不同的是，debounce保证一个函数在多少毫秒内不再被触发，只会执行一次，\r\n * 要么在第一次调用return的防抖函数时执行，要么在延迟指定毫秒后调用。\r\n * @example 适用场景：如在线编辑的自动存储防抖。\r\n * @param  {Number}   delay         0或者更大的毫秒数。 对于事件回调，大约100或250毫秒（或更高）的延迟是最有用的。\r\n * @param  {Boolean}  atBegin       可选，默认为false。\r\n *                                  如果`atBegin`为false或未传入，回调函数则在第一次调用return的防抖函数后延迟指定毫秒调用。\r\n                                    如果`atBegin`为true，回调函数则在第一次调用return的防抖函数时直接执行\r\n * @param  {Function} callback      延迟毫秒后执行的函数。`this`上下文和所有参数都是按原样传递的，\r\n *                                  执行去抖动功能时，，调用`callback`。\r\n *\r\n * @return {Function} 新的防抖函数。\r\n */\r\nfunction debounce(delay, atBegin, callback) {\r\n    return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\r\n};\r\nexport default   debounce;","import debounce  from \"./debounce\";\r\nimport throttle  from \"./throttle\";\r\n\r\nexport default   {\r\n    throttle, debounce\r\n};","import beforeFillChar from \"../str/beforeFillChar\";\r\n/**\r\n ** @desc 加法函数，用来得到精确的加法结果\r\n ** @desc 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\r\n ** @param  {Number}\r\n ** @param {Number} accAdd(arg1,arg2)\r\n ** @return {Number} arg1加上arg2的精确结果\r\n **/\r\nfunction accAdd(arg1, arg2) {\r\n  var r1, r2, m, c;\r\n  try {\r\n    r1 = arg1.toString().split(\".\")[1].length;\r\n  } catch (e) {\r\n    r1 = 0;\r\n  }\r\n  try {\r\n    r2 = arg2.toString().split(\".\")[1].length;\r\n  } catch (e) {\r\n    r2 = 0;\r\n  }\r\n  c = Math.abs(r1 - r2);\r\n  m = Math.pow(10, Math.max(r1, r2));\r\n  if (c > 0) {\r\n    var cm = Math.pow(10, c);\r\n    if (r1 > r2) {\r\n      arg1 = Number(arg1.toString().replace(\".\", \"\"));\r\n      arg2 = Number(arg2.toString().replace(\".\", \"\")) * cm;\r\n    } else {\r\n      arg1 = Number(arg1.toString().replace(\".\", \"\")) * cm;\r\n      arg2 = Number(arg2.toString().replace(\".\", \"\"));\r\n    }\r\n  } else {\r\n    arg1 = Number(arg1.toString().replace(\".\", \"\"));\r\n    arg2 = Number(arg2.toString().replace(\".\", \"\"));\r\n  }\r\n  return (arg1 + arg2) / m;\r\n}\r\n/**\r\n ** @desc 减法函数，用来得到精确的减法结果\r\n ** @desc 说明：javascript的减法结果会有误差，在两个浮点数相减的时候会比较明显。这个函数返回较为精确的减法结果。\r\n ** @param  {Number}\r\n ** @param {Number} accSub(arg1,arg2)\r\n ** @return {Number} arg1加上arg2的精确结果\r\n **/\r\nfunction accSub(arg1, arg2) {\r\n  var r1, r2, m, n;\r\n  try {\r\n    r1 = arg1.toString().split(\".\")[1].length;\r\n  } catch (e) {\r\n    r1 = 0;\r\n  }\r\n  try {\r\n    r2 = arg2.toString().split(\".\")[1].length;\r\n  } catch (e) {\r\n    r2 = 0;\r\n  }\r\n  m = Math.pow(10, Math.max(r1, r2)); //last modify by deeka //动态控制精度长度\r\n  n = r1 >= r2 ? r1 : r2;\r\n  return ((arg1 * m - arg2 * m) / m).toFixed(n);\r\n}\r\n/**\r\n ** @desc 乘法函数，用来得到精确的乘法结果\r\n ** @desc 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\r\n ** @param  {Number}\r\n ** @param {Number} accMul(arg1,arg2)\r\n ** @return {Number} arg1乘以 arg2的精确结果\r\n **/\r\nfunction accMul(arg1, arg2) {\r\n  var m = 0,\r\n    s1 = arg1.toString(),\r\n    s2 = arg2.toString();\r\n  try {\r\n    m += s1.split(\".\")[1].length;\r\n  } catch (e) {}\r\n  try {\r\n    m += s2.split(\".\")[1].length;\r\n  } catch (e) {}\r\n  return (Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\"))) / Math.pow(10, m);\r\n}\r\n/**\r\n ** @desc 除法函数，用来得到精确的除法结果\r\n ** @desc 说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。\r\n ** @param  {Number}\r\n ** @param {Number} accDiv(arg1,arg2)\r\n ** @return {Number} arg1除以arg2的精确结果\r\n **/\r\nfunction accDiv(arg1, arg2) {\r\n  var t1 = 0,\r\n    t2 = 0,\r\n    r1,\r\n    r2;\r\n  try {\r\n    t1 = arg1.toString().split(\".\")[1].length;\r\n  } catch (e) {}\r\n  try {\r\n    t2 = arg2.toString().split(\".\")[1].length;\r\n  } catch (e) {}\r\n  if (Math) {\r\n    r1 = Number(arg1.toString().replace(\".\", \"\"));\r\n    r2 = Number(arg2.toString().replace(\".\", \"\"));\r\n    return (r1 / r2) * Math.pow(10, t2 - t1);\r\n  }\r\n}\r\n\r\n/**\r\n ** @desc 数字转字符串并且填充0\r\n ** @param  {Number} 数字\r\n ** @param {Number} 长度\r\n ** @return {String}\r\n **/\r\nfunction fillZero(num, len) {\r\n  return beforeFillChar(num + \"\", len, 0);\r\n}\r\n\r\nexport default {\r\n  accAdd,\r\n  accSub,\r\n  accMul,\r\n  accDiv,\r\n  fillZero,\r\n};\r\n","/**\r\n * \r\n * @desc   写入剪切板 老版\r\n * @param  {String}  \r\n */\r\n// function clipboard(data){\r\n//     data=data.toString();\r\n//     let f = document.createElement(\"form\");\r\n//     f.id = \"copy-\" + Date.parse(new Date());\r\n//     f.onsubmit = function () { return false };\r\n//     f.style = \"opacity: 0;height: 1px;width: 1px;overflow: hidden;position:fixed;top: -1;left: -1;z-index: -1;\"\r\n//     f.innerHTML = `<button onclick='story.select();document.execCommand(\"Copy\");'></button>\r\n//         <textarea name=\"story\">${data}</textarea>`;\r\n//     document.body.appendChild(f);\r\n//     document.querySelector('#' + f.id + '>button').click();\r\n//     document.body.removeChild(document.getElementById(f.id));\r\n// }\r\n/**\r\n * \r\n * @desc   写入剪切板\r\n * @param  {String}  \r\n */\r\nfunction clipboard(str) {\r\n    const el = document.createElement('textarea');\r\n    el.value = str;\r\n    el.setAttribute('readonly', '');\r\n    el.style.position = 'absolute';\r\n    el.style.left = '-9999px';\r\n    document.body.appendChild(el);\r\n    const selected =document.getSelection().rangeCount > 0? document.getSelection().getRangeAt(0): false;\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n    if (selected) {\r\n        document.getSelection().removeAllRanges();\r\n        document.getSelection().addRange(selected);\r\n    }\r\n}\r\nexport default clipboard;","/**\r\n * \r\n * @desc 根据name读取cookie\r\n * @param  {String} name \r\n * @return {String}\r\n */\r\nfunction getCookie(name) {\r\n    var arr = document.cookie.replace(/\\s/g, \"\").split(';');\r\n    for (var i = 0; i < arr.length; i++) {\r\n        var tempArr = arr[i].split('=');\r\n        if (tempArr[0] == name) {\r\n            return decodeURIComponent(tempArr[1]);\r\n        }\r\n    }\r\n    return '';\r\n}\r\n\r\nexport default getCookie","/**\r\n * \r\n * @desc  设置Cookie\r\n * @param {String} name \r\n * @param {String} value \r\n * @param {Number} days \r\n */\r\nfunction setCookie(name, value, days) {\r\n    var date = new Date();\r\n    date.setDate(date.getDate() + days);\r\n    document.cookie = name + '=' + value + ';expires=' + date;\r\n}\r\n\r\nexport default setCookie","import setCookie from './setCookie';\r\n/**\r\n * \r\n * @desc 根据name删除cookie\r\n * @param  {String} name \r\n */\r\nfunction removeCookie(name) {\r\n    // 设置已过期，系统会立刻删除cookie\r\n    setCookie(name, '1', -1);\r\n}\r\n\r\nexport default removeCookie","import getCookie from './getCookie';\r\nimport removeCookie from './removeCookie';\r\nimport setCookie from './setCookie';\r\n\r\nexport default {\r\n    getCookie, removeCookie, setCookie\r\n};","/**\r\n * @desc 打包入口文件\r\n */\r\nimport json from './json';\r\nimport str from \"./str\";\r\nimport support from \"./support\";\r\nimport keycode from \"./keycode\";\r\nimport file from \"./file\";\r\nimport date from \"./date\";\r\nimport validate from \"./validate\";\r\nimport url from \"./url\";\r\nimport random from \"./random\";\r\nimport event from \"./event\";\r\nimport num from \"./num\";\r\nimport clipboard from \"./clipboard\";\r\nimport cookie from \"./cookie\";\r\n//不常用\r\n// import dom  from \"./dom\";\r\n// import mime  from \"./mime\";\r\n// import device  from \"./device\";\r\n// import xml  from \"./xml\";\r\nexport default {\r\n    cookie,\r\n    json,\r\n    str,\r\n    file,\r\n    date,\r\n    url,\r\n    event,\r\n    random,\r\n    num,\r\n    clipboard,\r\n    // support,\r\n    //不常用\r\n    // keycode,\r\n    // validate,\r\n    // dom,\r\n    // mime,\r\n    // xml,\r\n    // device\r\n};"],"names":["array2Tree","a","idStr","pidStr","chindrenStr","addHash","r","hash","id","pid","children","i","j","len","length","aVal","hashVP","push","tree","deepClone","values","Date","copy","setTime","getTime","Array","Object","attr","hasOwnProperty","Error","isEmpty","obj","_typeof","isArray","keys","reverse","fromEntries","entries","map","o","JSON","parse","stringify","d","arrayEqual","arr1","arr2","prototype","toString","call","optionArr2Obj","l","t","v","c","obj2OptionArr","k","countArray","arr","value","reduce","initRangeArray","start","end","apply","arrFind","s","kv","f","m","oneK","isFn","ks","_","lutils","json","objFields","this","n","getTreeNodeIdPath","treeArr","undefined","pathId","_fn","nodes","$pid","concat","objectProxy","conf","watch","update","initValue","data","change","e","event","oldValue","target","key","receiver","forEach","eval","bind","proxy","proxify","isPrimitive","Proxy","get","getProp","set","property","storageProxy","name","storage","localStorage","getItem","error","setItem","paginationParse","pageNum","totalCount","dataCount","pageSize","pageListCount","page","cursor","parseInt","size","total","list","listCount","max","Math","ceil","floor","offset","filter","slice","prev","next","getPageData","toMatrix","width","rows","index","arrToMatrix","replaceAll","s0","s1","s2","replace","RegExp","digitUppercase","fraction","digit","unit","head","abs","pow","p","rtrim","ltrim","trim","split","join","ucfirst","str","toLowerCase","word","substring","toUpperCase","beforeFillChar","char","fill","toBlobURL","url","URL","createObjectURL","setTimeout","revokeObjectURL","toDataURL","file","isBase","reader","FileReader","onload","result","readAsDataURL","base64UrlToBlob","urlData","type","isAB","bytes","window","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","base64UrlToFile","img","File","downloadByUrl","document","createElement","href","download","style","body","appendChild","querySelector","click","removeChild","getElementById","bytesToSize","sizes","log","toPrecision","string2date","formatPassTime","startTime","time","day","hour","min","month","year","formatRemainTime","endTime","startDate","h","isSameDay","date1","date2","date1_year","getFullYear","date1_month","getMonth","date1_date","getDate","date2_year","date2_month","getTimeStamp","performance","now","toCSTString","timestamp","toISOString","toCSTDateString","getQueryObject","search","location","lastIndexOf","q","decodeURIComponent","stringfyQueryString","pairs","encodeURIComponent","getQueryString","reg","substr","match","decodeURI","randomBoolean","random","randomColor","randomNum","randomChars","ranNum","String","fromCharCode","randomSort","sort","UUID","crypto","getRandomValues","id11","throttle","delay","noTrailing","callback","debounceMode","timeoutID","lastExec","self","elapsed","Number","args","arguments","exec","clearTimeout","debounce","atBegin","accAdd","arg1","arg2","r1","r2","cm","accSub","toFixed","accMul","accDiv","t1","t2","fillZero","num","clipboard","el","selected","setAttribute","position","left","getSelection","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","getCookie","cookie","tempArr","setCookie","days","date","setDate","removeCookie"],"mappings":"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"}